@page
@model PrivacyModel
@{
    ViewData["Title"] = "PBbus-주변 버스 정류장";
}
<h1>@ViewData["Title"]</h1>

<!--The core Firebase JS SDK is always required and must be listed first-->
       
    <script src="/__/firebase/8.1.1/firebase-app.js"></script>

<!-- TODO: Add SDKs for Firebase products that you want to use
     https://firebase.google.com/docs/web/setup#available-libraries -->
<script src="/__/firebase/8.1.1/firebase-analytics.js"></script>

<!-- Initialize Firebase -->
<script src="/__/firebase/init.js"></script>
<script>
    var xhr = new XMLHttpRequest();
    var url = 'http://61.43.246.153/openapi-data/service/busanBIMS2/busStop'; /*URL*/
    var queryParams = '?' + encodeURIComponent('serviceKey') + '=' + 'IaZORLQ5fUsYjRh9LPNg352YV8gqFIK51QUYJEZ2TjanprG%2BMj4SLhU38uB0d%2FJWc1%2BPMSJVHY5f3h48Yfi8Mw%3D%3D';
    queryParams += '&' + encodeURIComponent('bstopnm') + '=' + encodeURIComponent('부산시청'); /*Service Key*/
    queryParams += '&' + encodeURIComponent('numOfRows') + '=' + encodeURIComponent('3'); /**/
    queryParams += '&' + encodeURIComponent('pageNo') + '=' + encodeURIComponent('1'); /*&pageNo=1&numOfRows=10&bstopnm=부산시청&arsno=13045*/
    xhr.open('GET', url + queryParams);
    xhr.onreadystatechange = function () {
        if (this.readyState == 4) {
            alert('Status: ' + this.status + 'nHeaders: ' + JSON.stringify(this.getAllResponseHeaders()) + 'nBody: ' + this.responseText);
        }
    };

    xhr.send('');
</script>
<div id="map" style="width:100%;height:350px;"></div>
<script type="text/javascript" src="//dapi.kakao.com/v2/maps/sdk.js?appkey=d0e63b95cc1a79c38bb8729233e6d47a"></script>
<script>
    var mapContainer = document.getElementById('map'), // 지도를 표시할 div
        mapOption = {
            center: new kakao.maps.LatLng(35.172161215995864, 129.06114863176097), // 지도의 중심좌표
            level: 8 // 지도의 확대 레벨
        };

    var map = new kakao.maps.Map(mapContainer, mapOption); // 지도를 생성합니다

    // 마커를 표시할 위치와 내용을 가지고 있는 객체 배열입니다
    var positions = [
        {
            content: '<div>주례역</div>',
            latlng: new kakao.maps.LatLng(35.15100000821625, 129.00305603722262)
        },
        {
            content: '<div>사상역</div>',
            latlng: new kakao.maps.LatLng(35.162263518824794, 128.9848864780289)
        },
        {
            content: '<div>신라대학교</div>',
            latlng: new kakao.maps.LatLng(35.166911685151504, 128.99338474577962)
        },
        {
            content: '<div>개금</div>',
            latlng: new kakao.maps.LatLng(35.154090873800065, 129.02095706596094)
        },
        {
            content: '<div>가야</div>',
            latlng: new kakao.maps.LatLng(35.160669781320664, 129.04017782879296)
        },
        {
            content: '<div>양정</div>',
            latlng: new kakao.maps.LatLng(35.17338294971029, 129.07073925846532)
        },
        {
            content: '<div>망미동</div>',
            latlng: new kakao.maps.LatLng(35.1715037623559, 129.10825364185524)
        },
        {
            content: '<div>광안리</div>',
            latlng: new kakao.maps.LatLng(35.15818778384249, 129.11289542097788)
        },
        {
            content: '<div>민락동</div>',
            latlng: new kakao.maps.LatLng(35.16713044876403, 129.12185296818515)
        },
        {
            content: '<div>수영교차로</div>',
            latlng: new kakao.maps.LatLng(35.16713044876403, 129.12185296818515)
        }
    ];

    for (var i = 0; i < positions.length; i++) {
        // 마커를 생성합니다
        var marker = new kakao.maps.Marker({
            map: map, // 마커를 표시할 지도
            position: positions[i].latlng // 마커의 위치
        });

        // 마커에 표시할 인포윈도우를 생성합니다
        var infowindow = new kakao.maps.InfoWindow({
            content: positions[i].content // 인포윈도우에 표시할 내용
        });

        // 마커에 mouseover 이벤트와 mouseout 이벤트를 등록합니다
        // 이벤트 리스너로는 클로저를 만들어 등록합니다
        // for문에서 클로저를 만들어 주지 않으면 마지막 마커에만 이벤트가 등록됩니다
        kakao.maps.event.addListener(marker, 'mouseover', makeOverListener(map, marker, infowindow));
        kakao.maps.event.addListener(marker, 'mouseout', makeOutListener(infowindow));
        // kakao.maps.event.addListener(marker, 'click', makeClicklistener(map, marker));
    }


    // 인포윈도우를 표시하는 클로저를 만드는 함수입니다
    function makeOverListener(map, marker, infowindow) {
        return function () {
            infowindow.open(map, marker);
        };
    }

    // 인포윈도우를 닫는 클로저를 만드는 함수입니다
    function makeOutListener(infowindow) {
        return function () {
            infowindow.close();
        };
        // 마커에 클릭이벤트를 등록합니다
        kakao.maps.event.addListener(marker, 'click', function () {
            if (content == "주례역") {
                var moveLatLng = new kakao.maps.LatLng(35.15100000821625, 129.00305603722262);
                map.panTo(moveLatLng);
            }
            else if (content == "사상역") {
                var moveLatLng = new kakao.maps.LatLng(35.162263518824794, 128.9848864780289);
                map.panTo(moveLatLng);
            }
            else if (content == "신라대학교") {
                var moveLatLng = new kakao.maps.LatLng(35.166911685151504, 128.99338474577962);
                map.panTo(moveLatLng);
            }
            else if (content == "개금") {
                var moveLatLng = new kakao.maps.LatLng(35.154090873800065, 129.02095706596094);
                map.panTo(moveLatLng);
            }
            else if (content == "가야") {
                var moveLatLng = new kakao.maps.LatLng(35.160669781320664, 129.04017782879296);
                map.panTo(moveLatLng);
            }
            else if (content == "양정") {
                var moveLatLng = new kakao.maps.LatLng(35.17338294971029, 129.07073925846532);
                map.panTo(moveLatLng);
            }
            else if (content == "망미동") {
                var moveLatLng = new kakao.maps.LatLng(35.1715037623559, 129.1082536418);
                map.panTo(moveLatLng);
            }
            else if (content == "광안리") {
                var moveLatLng = new kakao.maps.LatLng(35.15818778384249, 129.11289542097788);
                map.panTo(moveLatLng);
            }
            else if (content == "민락동") {
                var moveLatLng = new kakao.maps.LatLng(35.16713044876403, 129.12185296818515);
                map.panTo(moveLatLng);
            }
            else if (content == "수영교차로") {
                var moveLatLng = new kakao.maps.LatLng(35.16713044876403, 129.12185296818515);
                map.panTo(moveLatLng);
            }

        });
    }


</script>

<p>주변 버스 정류장 확인</p>

